@page "/PathFindingPage"
@using Microsoft.AspNetCore.Components
@using TravelingSalesmanWebApp.Data.Models
@using TravelingSalesmanWebApp.Domain
@inject ApplicationDBContext Context
@inject IPathApplication PathApplication

<h3>Поиск оптимального пути</h3>

<MudSelect @bind-Value="@startId" T="City" Label="Стартовый город">
    @foreach (var item in Context.Cities)
    {
        <MudSelectItem Value="@item">@item.Name</MudSelectItem>
    }
</MudSelect>
<MudSelect @bind-Value="@endId" T="City" Label="Конечный город">
    @foreach (var item in Context.Cities)
    {
        <MudSelectItem Value="@item">@item.Name</MudSelectItem>
    }
</MudSelect>

    <MudIconButton OnClick="GetResult" Variant="Variant.Filled" Color="Color.Secondary" Icon="@Icons.Material.Filled.Calculate"></MudIconButton>
    <MudText>@result</MudText>

@code {
    public City startId;
    public City endId;
    public string result;

    public void GetResult()
    {
        var shortestPathModel = PathApplication.GetShortestPath(startId.Id, endId.Id);
        var distances = shortestPathModel.Paths.Select(x => x.Weight);
        var sumPath = distances
            .Sum();
        var resultNames = shortestPathModel.Cities.Select(city => city.Name);
        result = String.Join("->", resultNames) + " " + sumPath;
    }
}